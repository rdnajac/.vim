{
  "cd0": {
    "prefix": "cd",
    "body": "cd -P -- \"\\$(dirname \"${1:\\$0}\")\"",
    "description": "cd safely"
  },

  "bash dir": {
    "prefix": "DIR",
    "body": "DIR=\"\\$(cd -P -- \"\\$(dirname -- \"\\${BASH_SOURCE[0]}\")\" && pwd -P)\"",
    "description": "Change to the bash script's directory."
  },

  "cd or die (bash)": {
    "prefix": "cdordie",
    "body": "cd -P -- \"\\$(dirname -- \"\\${BASH_SOURCE[0]}\")\" || {\n\t\n\techo \"\\$0: cd failed\"\n\texit 1\n}\n",
    "description": "cd safely or die"
  },


  "THREADS": {
    "prefix": "THREADS",
    "body": "THREADS=\"\\$(nproc)\"",
    "description": "THREADS"
  },

  "safe": {
    "prefix": "set",
    "body": "set -eux\n\n",
    "description": "Set the shell to exit on error, unset variables, and print each command."
  },

  "for": {
    "prefix": "for",
    "body": "for ${1} in ./${2}\ndo\n\t${3:echo} \"\\$${1}\"\ndone\n"
  },

  "read": {
    "prefix": "read",
    "body": "read -r ${0:VAR}"
  },

  "if": {
    "prefix": "if",
    "body": "if [[ ${1:condition} ]]; then\n\t${0}\nfi"
  },

  "elseif": {
    "prefix": "elseif",
    "body": "elif [[ ${1:condition} ]]; then\n\t${0}"
  },

  "else": {
    "prefix": "else",
    "body": "else\n\t${0:command}"
  },

  "function": {
    "prefix": "function",
    "body": "${1:name}() {\n\t${0}\n}"
  },

  "case": {
    "prefix": "case",
    "body": "case \"\\$${1:VAR}\" in\n\t${2:1}) echo 1\n\t;;\n\t${3:2|3}) echo 2 or 3\n\t;;\n\t*) echo default\n\t;;\nesac\n",
    "description": [
      "case word in [ [(] pattern [ | pattern ] ... ) list ;; ] ... esac\n",
      "A case command first expands word, and tries to match it against each pattern in turn."
    ]
  },

  "comment": {
    "prefix": "doc",
    "body": [
      "#######################################",
      "# ${1:Description of the function.}$0",
      "# Globals:",
      "#   ${3:MY_VAR}",
      "# Arguments:",
      "#   ${4:None}",
      "# Outputs:",
      "#   ${5:Output to STDOUT or STDERR.}",
      "# Returns:",
      "#   ${2: Description of the returned value.}",
      "#######################################"
    ],
    "description": "A shell comment block for functions, including description, globals, arguments, outputs, and returns. For functions without I/O, use the simple version of this snippet instead.\n\nYou can delete 'Globals'/'Arguments'/'Outputs' in functions with no input/output.\n\nIt doesn't includes, but accepts the optional keywords:\n  'See'\n  'Raises'"
  }
}
