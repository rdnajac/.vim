snippet #! "shebang" Ab
#!/bin/bash
#
## ${0:Description}
endsnippet

snippet \s "Safe mode" Ab
set -euo pipefail
IFS=$'\n\t'

endsnippet

snippet \f "Function" Ab
${1:function}() {
	${0:${VISUAL}}
}
endsnippet


snippet /case|sw(itch)?/ "case .. esac (case)" rb
case ${1:word} in
	${2:pattern} )
		${0:${VISUAL}};;
esac
endsnippet

snippet elif "elif .. (elif)" b
elif ${2:[[ ${1:condition} ]]}; then
	${0:${VISUAL}}
endsnippet

snippet for "for ... done (for)" b
for (( i = 0; i < ${1:10}; i++ )); do
	${0:${VISUAL}}
done
endsnippet

snippet forin "for ... in ... done (forin)" b
for ${1:i}${2/.+/ in /}${2:words}; do
	${0:${VISUAL}}
done
endsnippet

snippet here "here document (here)"
<<-${2:'${1:TOKEN}'}
	$0`echo \\n`${1/['"`](.+)['"`]/$1/}
endsnippet

snippet /ift(est)?/ "if ... then (if)" rb
if ${2:[ ${1:condition} ]}; then
	${0:${VISUAL}}
fi
endsnippet

snippet if "if ... then (if)" b
if [[ ${1:condition} ]]; then
	${0:${VISUAL}}
fi
endsnippet

snippet until "until ... (done)" b
until ${2:[[ ${1:condition} ]]}; do
	${0:${VISUAL}}
done
endsnippet

snippet /wh(ile)?/ "while ... (done)" rb
while ${2:[[ ${1:condition} ]]}; do
	${0:${VISUAL}}
done
endsnippet

snippet \fu "function() {...}" Ab
snippet if "if statement"
	if [ $1 ]; then
		${0:${VISUAL}}
	fi
endsnippet

snippet elif "elif statement"
	elif [ $1 ]; then
		${0:${VISUAL}}
endsnippet

snippet for "for loop"
	for (( ${2:i} = 0; $2 < ${1:count}; $2++ )); do
		${0:${VISUAL}}
	done
endsnippet

snippet fori "for-in loop"
	for ${1:needle} in ${2:haystack} ; do
		${0:${VISUAL}}
	done
endsnippet

snippet wh "while loop"
	while [ $1 ]; do
		${0:${VISUAL}}
	done
endsnippet

snippet wht "while true loop"
	while true; do
		${0:${VISUAL}}
	done
endsnippet

snippet until "until loop"
	until [ $1 ]; do
		${0:${VISUAL}}
	done
endsnippet

snippet case "case statement"
	case ${1:word} in
		${2:pattern})
			${0};;
	esac
endsnippet

snippet go "getopts loop"
	while getopts '${1:o}' ${2:opts}
	do
		case $$2 in
		${3:o0})
			${0:#staments};;
		esac
	done
endsnippet

snippet sdir "Set SCRIPT_DIR variable to directory script is located"
	SCRIPT_DIR="\$( cd "\$( dirname "\${BASH_SOURCE[0]}" )" && pwd )"
endsnippet

snippet getopt "getopt function with usage"
	#===  FUNCTION  ================================================================
	#         NAME:  usage
	#  DESCRIPTION:  Display usage information.
	#===============================================================================
	usage ()
	{
		echo "Usage :  \$${0:0} [options] [--]

	    Options:
	    -h|help       Display this message
	    -v|version    Display script version"

	}    # ----------  end of function usage  ----------

	#-----------------------------------------------------------------------
	#  Handle command line arguments
	#-----------------------------------------------------------------------

	while getopts ":hv" opt
	do
	  case \$opt in

		h|help     )  usage; exit 0   ;;

		v|version  )  echo "\$${0:0} -- Version \$__ScriptVersion"; exit 0   ;;

		* )  echo -e "\\n  Option does not exist : \$OPTARG\\n"
			  usage; exit 1   ;;

	  esac    # --- end of case ---
	done
	shift \$(($OPTIND-1))
endsnippet


# vim:ft=snippets:
